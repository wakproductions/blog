<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-07-13T19:55:00-04:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Interviewing Tip - Peel the Onion</title>
    <link rel="alternate" href="http://blog.url.com/2017/07/13/interviewing-tip-peel-the-onion.html"/>
    <id>http://blog.url.com/2017/07/13/interviewing-tip-peel-the-onion.html</id>
    <published>2017-07-13T19:55:00-04:00</published>
    <updated>2017-07-13T21:06:18-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I&amp;#39;m the author of the college student job search guide, &lt;a href="https://www.amazon.com/gp/product/0985757116/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0985757116&amp;amp;linkCode=as2&amp;amp;tag=winstonkotzan-20&amp;amp;linkId=49527ca8d490f74681ce640c10f22108"&gt;This is Not Your Father&amp;#39;s Job Market&lt;/a&gt;,
and right now I&amp;#39;m actively using those job search skills again myself as I look for new technical projects. Something that I
retrospectively caught myself doing today during a phone interview is rambling a bit.&lt;/p&gt;

&lt;p&gt;One of the tricky things about interviewing in general, but in particular with phone interviewing, is that it&amp;#39;s easy to
spill too much information when answering an interview question. So in the call I was on today, I asked the interviewer
about the production stack they are using to run their website. He said that their front-end is very simple-just some
plain Javascript, but in this role I was in I may have an opportunity to help them decide how to build a more up-to-date
front end. I then started talking about my personal experience using React.js and other front end frameworks, and probably
spoke for a good 3 minutes espousing my opinions of the pros and cons of each.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s a few reasons talking too continuously is bad for interviews:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You don&amp;#39;t have visual cues as to how the interviewer is reacting. i.e.) the person on the other end of the
line might look bored or disinterested in what you are saying, but since you can&amp;#39;t see it&amp;#39;s difficult to know.&lt;/li&gt;
&lt;li&gt;You might reveal something compromising or contrary to what the interviewer is looking for. For example, I may have
given the impression in this case that I was biased to React.js. What if this team wanted to use Ember.js?&lt;/li&gt;
&lt;li&gt;You might inadvertently come across as a know-it-all. Talking too much on a topic makes it sound like you&amp;#39;re
trying to dominate the conversation. This can easily happen over the phone when only one person can speak at a time.
At worst, your opinions may even conflict with the interviewer&amp;#39;s opinions making you a dislikable candidate.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The way to fix this is to only give enough information and talk long enough to give what&amp;#39;s needed - it&amp;#39;s like peeling an
onion only one layer at a time. Don&amp;#39;t give away the whole thing at once. If the interviewer is interested in what you
have to say, he&amp;#39;ll probe for more. You can also end each statement you make by affirming with: &amp;quot;Does that adequately
answer the question?&amp;quot;&lt;/p&gt;

&lt;p&gt;If you want a job search guide full of awesome tips like this, I recommend getting a copy of my book! Link below.&lt;/p&gt;

&lt;p&gt;&lt;a target="_blank" href="https://www.amazon.com/gp/product/0985757116/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0985757116&amp;linkCode=as2&amp;tag=winstonkotzan-20&amp;linkId=49527ca8d490f74681ce640c10f22108"&gt;This is Not Your Father&amp;#39;s Job Market: Job Seeking Strategies for Today&amp;#39;s New College Graduates&lt;/a&gt;&lt;img src="//ir-na.amazon-adsystem.com/e/ir?t=winstonkotzan-20&amp;l=am2&amp;o=1&amp;a=0985757116" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /&gt;&lt;/p&gt;

&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=US&amp;source=ac&amp;ref=qf_sp_asin_til&amp;ad_type=product_link&amp;tracking_id=winstonkotzan-20&amp;marketplace=amazon&amp;region=US&amp;placement=0985757116&amp;asins=0985757116&amp;linkId=f280bde1ac5d26e167436aca1ba048ee&amp;show_border=false&amp;link_opens_in_new_window=true&amp;price_color=333333&amp;title_color=0066c0&amp;bg_color=ffffff"&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>Capistrano + Docker could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network</title>
    <link rel="alternate" href="http://blog.url.com/2017/07/12/docker-could-not-find-available-ipv4-address.html"/>
    <id>http://blog.url.com/2017/07/12/docker-could-not-find-available-ipv4-address.html</id>
    <published>2017-07-12T01:00:00-04:00</published>
    <updated>2017-07-12T22:03:52-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;So on my latest Capistrano deploy to &lt;a href="http://www.momentumstockscans.com"&gt;MomentumStockScans.com&lt;/a&gt;, I received the following
error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo docker-compose up -d
sudo: unable to resolve host ip-172-30-0-194
Creating network &amp;quot;20170713014600_default&amp;quot; with the default driver
ERROR: could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Turns out every time I was running &lt;code&gt;docker-compose&lt;/code&gt; it created a new bridge network, and &lt;a href="https://github.com/moby/moby/issues/23971"&gt;there&amp;#39;s a limit of 31 networks
on the system&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;When I did &lt;code&gt;docker network ls&lt;/code&gt;, it gave me a whole list of networks it created. One for each deploy. I cleared them using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo docker network prune
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Everything was fine! Will add the above command to my Capistrano deploy script.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Introducing MomentumStockScans.com!</title>
    <link rel="alternate" href="http://blog.url.com/2017/06/25/introducing-momentum-stock-scans.html"/>
    <id>http://blog.url.com/2017/06/25/introducing-momentum-stock-scans.html</id>
    <published>2017-06-25T01:00:00-04:00</published>
    <updated>2017-06-25T12:31:18-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Here is a link to my latest project, &lt;a href="http://www.momentumstockscans.com"&gt;MomentumStockScans.com&lt;/a&gt;, a free stock market
scanning tool to help equities traders find the best daily opportunities. Here is a brief introduction video,
more content to follow!&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/pgX9ws8k6uY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>How to test Devise Omniauth in your local development environment with Instagram</title>
    <link rel="alternate" href="http://blog.url.com/2017/06/18/testing-instagram-omniauth-devise-in-development.html"/>
    <id>http://blog.url.com/2017/06/18/testing-instagram-omniauth-devise-in-development.html</id>
    <published>2017-06-18T01:00:00-04:00</published>
    <updated>2017-06-20T16:37:11-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;For testing in your local environment, you can set the Omniauth redirect to a URL on your localhost. First, you have
to add localhost to your list of authorized hosts in your Omniauth settings:&lt;/p&gt;

&lt;p&gt;&lt;img src="../../../images/2016/Pasted_Image_6_18_17__4_57_PM.png" style="width: 600px" relative="true" alt="Pasted image 6 18 17  4 57 pm" /&gt;&lt;/p&gt;

&lt;p&gt;Then access the Oauth link to log into Instagram. You can do this by clicking a link in your browser set by
your Rails app running locally, or you can type the URL into your browser directly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://www.instagram.com/oauth/authorize?client_id=&amp;lt;-- your client id --&amp;gt;&amp;amp;redirect_uri=http://localhost:5050/users/auth/instagram/callback&amp;amp;response_type=code
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can then log into your Instagram account and it will redirect you back to the application.&lt;/p&gt;

&lt;p&gt;&lt;img src="../../../images/2016/Pasted_Image_6_18_17__5_09_PM.png" style="width: 600px" relative="true" alt="Pasted image 6 18 17  5 09 pm" /&gt;&lt;/p&gt;

&lt;p&gt;Showing that the Devise callback URL is being hit by the browser with the access token from inside &lt;code&gt;rails s&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;     2: def instagram
     3:   @user = User.from_omniauth(omniauth_data)
     4:
     5:   binding.pry
     6:
 =&amp;gt;  7:   if @user.access_token != omniauth_data.credentials.token
     8:     # This will be saved by the `sign_in_and_redirect` method below
     9:     @user.access_token = omniauth_data.credentials.token
    10:   end

[1] pry(#&amp;lt;Users::OmniauthCallbacksController&amp;gt;)&amp;gt; @user
=&amp;gt; #&amp;lt;User id: 1, uid: &amp;quot;300202775&amp;quot;, email: &amp;quot;&amp;quot;, created_at: &amp;quot;2017-06-18 19:25:50&amp;quot;, updated_at: &amp;quot;2017-06-18 19:25:50&amp;quot;, access_token: nil, first_name: &amp;quot;Winston&amp;quot;, last_name: &amp;quot;Kotzan&amp;quot;, middle_name: &amp;quot;&amp;quot;, time_zone: nil, provider: &amp;quot;instagram&amp;quot;&amp;gt;
[2] pry(#&amp;lt;Users::OmniauthCallbacksController&amp;gt;)&amp;gt; User.count
   (1.2ms)  SELECT COUNT(*) FROM &amp;quot;users&amp;quot;
=&amp;gt; 1
[4] pry(#&amp;lt;Users::OmniauthCallbacksController&amp;gt;)&amp;gt; request.env[&amp;#39;omniauth.auth&amp;#39;]
=&amp;gt; {&amp;quot;provider&amp;quot;=&amp;gt;&amp;quot;instagram&amp;quot;,
 &amp;quot;uid&amp;quot;=&amp;gt;&amp;quot;300202775&amp;quot;,
 &amp;quot;info&amp;quot;=&amp;gt;
  {&amp;quot;nickname&amp;quot;=&amp;gt;&amp;quot;wakproductions&amp;quot;,
   &amp;quot;name&amp;quot;=&amp;gt;&amp;quot;Winston Kotzan&amp;quot;,
   &amp;quot;email&amp;quot;=&amp;gt;nil,
   &amp;quot;image&amp;quot;=&amp;gt;&amp;quot;https://scontent.cdninstagram.com/t51.2885-19/11934657_1625722474367056_1293718021_a.jpg&amp;quot;,
   &amp;quot;bio&amp;quot;=&amp;gt;&amp;quot;&amp;quot;,
   &amp;quot;website&amp;quot;=&amp;gt;&amp;quot;&amp;quot;},
 &amp;quot;credentials&amp;quot;=&amp;gt;{&amp;quot;token&amp;quot;=&amp;gt;&amp;quot;300202775.ce5d604.417373f3e1e844478f2ddfae17dbe378&amp;quot;, &amp;quot;expires&amp;quot;=&amp;gt;false},
 &amp;quot;extra&amp;quot;=&amp;gt;
  {&amp;quot;raw_info&amp;quot;=&amp;gt;
    {&amp;quot;id&amp;quot;=&amp;gt;&amp;quot;300202775&amp;quot;,
     &amp;quot;username&amp;quot;=&amp;gt;&amp;quot;wakproductions&amp;quot;,
     &amp;quot;profile_picture&amp;quot;=&amp;gt;&amp;quot;https://scontent.cdninstagram.com/t51.2885-19/11934657_1625722474367056_1293718021_a.jpg&amp;quot;,
     &amp;quot;full_name&amp;quot;=&amp;gt;&amp;quot;Winston Kotzan&amp;quot;,
     &amp;quot;bio&amp;quot;=&amp;gt;&amp;quot;&amp;quot;,
     &amp;quot;website&amp;quot;=&amp;gt;&amp;quot;&amp;quot;}}}
[5] pry(#&amp;lt;Users::OmniauthCallbacksController&amp;gt;)&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>US Treasury Yield Curve Chart</title>
    <link rel="alternate" href="http://blog.url.com/2017/06/08/new-website-us-treasury-yield-curve.html"/>
    <id>http://blog.url.com/2017/06/08/new-website-us-treasury-yield-curve.html</id>
    <published>2017-06-08T01:00:00-04:00</published>
    <updated>2017-06-08T16:21:06-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Here&amp;#39;s a little project I did for fun to demonstrate a little Javascript single page app running on an
AWS/Docker/Ruby on Rails stack.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.ustreasuryyieldcurve.com"&gt;US Treasury Yield Curve&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The term structure of interest rates are an important barometer for the economy. When the yield curve flattens
it&amp;#39;s often a good predictor of economic slowdown and subsequent decline in the stock market. Play around
with it and see what the interest rates have looked like historically!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Docker + Capistrano + Rails Errors! "The asset "application.css" is not present in the asset pipeline"</title>
    <link rel="alternate" href="http://blog.url.com/2017/06/06/docker-capistrano-asset-and-log-file-links.html"/>
    <id>http://blog.url.com/2017/06/06/docker-capistrano-asset-and-log-file-links.html</id>
    <published>2017-06-06T01:00:00-04:00</published>
    <updated>2017-06-06T15:00:43-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Upon getting my Docker application running in production, I ran into this error message:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;F, [2017-06-06T00:53:06.630911 #1] FATAL -- : [8957e40e-e8fa-4f2d-8072-4dab83c6269b] ActionView::Template::Error (The asset &amp;quot;application.css&amp;quot; is not present in the asset pipeline.):
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The problem occurred because the Rails asset pipeline was missing files. The application in production mode couldn&amp;#39;t find
the files it was looking for from the &lt;code&gt;rake assets:precompile&lt;/code&gt; stage, which was performed by Capistrano &lt;em&gt;outside&lt;/em&gt; of the
Docker container. To fix this error I had to symlink the &lt;code&gt;public/assets&lt;/code&gt; folder inside of the Docker container to
the file system outside like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#docker-compose.yml

version: &amp;#39;3&amp;#39;
services:
  web:
    container_name: myapp
    build: .
    command: bundle exec rails s -p 3000
    environment:
      - RAILS_ENV=${RAILS_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
    extra_hosts:
      - dbhost:${LOCAL_IP:-127.0.0.1}
    ports:
      - ${HTTP_PORT:-80}:3000
    tty: true
    volumes:
      - ./log:/app/log
      - ./public/assets:/app/public/assets
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that on the &lt;code&gt;volumes&lt;/code&gt; section I link both the &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;public&lt;/code&gt; assets folder. &lt;/p&gt;
</content>
  </entry>
</feed>
