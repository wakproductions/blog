<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2019-04-09T19:00:00-04:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>The Easy Guide to Making Your Github Pages Site HTTPS</title>
    <link rel="alternate" href="http://blog.url.com/2019/04/09/the-easy-guide-to-making-your-github-pages-site-https.html"/>
    <id>http://blog.url.com/2019/04/09/the-easy-guide-to-making-your-github-pages-site-https.html</id>
    <published>2019-04-09T19:00:00-04:00</published>
    <updated>2019-04-10T01:13:45-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I recently added HTTPS to my blog. The information in the Github docs on how to enable this feature is a little scattered,
so here&amp;#39;s a quick and easy summary of the steps required.&lt;/p&gt;

&lt;h3&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;This guide is for using the &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; feature of Github with your own domain name.
Github provides a way to host your own static HTML website via a Git repository. Every repo has the ability
to do this by having the HTML pages and related assets in a &lt;code&gt;gh-pages&lt;/code&gt; branch. It is great for making a
documentation site of technical projects, or your own blog. My website is generated using a Ruby tool &lt;a href="https://middlemanapp.com/"&gt;Middleman&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;1. Create a DNS &amp;quot;A&amp;quot; Record&lt;/h3&gt;

&lt;p&gt;Assuming your domain name is newly established, you need to create an &amp;quot;A&amp;quot; type DNS record. &lt;a href="https://help.github.com/en/articles/troubleshooting-custom-domains#custom-domains-configured-with-a-records"&gt;According to the docs&lt;/a&gt;,
it must point to one of the following IP addresses:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;185.199.108.153
185.199.109.153
185.199.110.153
185.199.111.153
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;2. Create a DNS &amp;quot;CAA&amp;quot; Record&lt;/h3&gt;

&lt;p&gt;The &amp;quot;CAA&amp;quot; record will enable Let&amp;#39;s Encrypt to issue a certificate for your domain name. This type of record is basically
a security feature that specifies which certificate authority is allowed to produce records for your domain. It is required
for your Github Pages site to run on HTTPS. Just set the value to &lt;code&gt;letsencrypt.org&lt;/code&gt; and the host name value be your
top level domain (or blank).&lt;/p&gt;

&lt;h3&gt;3. Redeploy your website&lt;/h3&gt;

&lt;p&gt;For Github Pages to initiate the HTTPS certificate generation process, you need to do a deploy of your website. Since
I am using Middleman, I had to commit a small change to the website and at the command line &lt;code&gt;rake publish&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;4. Enable the &amp;quot;Force HTTPS&amp;quot; option in your Github settings&lt;/h3&gt;

&lt;p&gt;For every repo you want to work with HTTPS, you need to go into your Github settings and check the &amp;quot;Force HTTPS&amp;quot; box.&lt;/p&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/github-settings-1.png"&gt;&lt;img src="../../../images/2019/03/github-settings-1.png" alt="Github settings 1" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      Go to the settings page for your repo
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/github-settings-2.png"&gt;&lt;img src="../../../images/2019/03/github-settings-2.png" alt="Github settings 2" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      Scrolldown to the Github Pages section
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;It can take a few minutes for all of these settings to propagate, so don&amp;#39;t worry if everything doesn&amp;#39;t work right away.&lt;/p&gt;

&lt;h3&gt;CNAME file (maybe)&lt;/h3&gt;

&lt;p&gt;For some repos, you may need to drop in a plain text file named &lt;code&gt;CNAME&lt;/code&gt; with the only contents being the name of your
domain. This allows Github Pages to find and route DNS appropriately on their end.&lt;/p&gt;

&lt;h3&gt;Bonus Tips&lt;/h3&gt;

&lt;p&gt;I recommend shopping around for a DNS provider to give you the best price. There are many registrars out there which
charge a lot for little value. I was previously using &lt;a href="https://www.dnsimple.com/"&gt;DNSimple&lt;/a&gt;, which I discontinued
because I felt it was too expensive for what it&amp;#39;s worth. They had great service, but charged a monthly fee
and also wouldn&amp;#39;t create the &amp;quot;CAA&amp;quot; record unless I upgraded my plan. They also wanted to charge extra for
Whois privacy protection. This didn&amp;#39;t even include the $15 a year registraton fee for the domain itself.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve also had bad experience with Amazon&amp;#39;s Route 53 service. They have a complicated system for billing and charge
per amount of traffic. What they offer might be useful for web apps that require a lot of bandwidth and
latency is a concern, but that is not the case for this single blog.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m currently using a Germany based service named &lt;a href="https://www.ionos.com"&gt;Ionos&lt;/a&gt;. It has all of the features
I need. The only thing I would change is that I wish they had US-based name servers. But that&amp;#39;s not an issue
for this blog right now.&lt;/p&gt;

&lt;h4&gt;Additional Resources:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://help.github.com/en/articles/using-a-custom-domain-with-github-pages"&gt;Official Github Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>Don't Make This Mistake When Using Docker Volumes!</title>
    <link rel="alternate" href="http://blog.url.com/2019/04/03/docker-volumes-dont-make-this-mistake.html"/>
    <id>http://blog.url.com/2019/04/03/docker-volumes-dont-make-this-mistake.html</id>
    <published>2019-04-03T19:00:00-04:00</published>
    <updated>2019-04-05T00:14:25-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/thumbnail-2019-04-05-docker-volumes-mistake.png"&gt;&lt;img src="../../../images/2019/thumbnail-2019-04-05-docker-volumes-mistake.png" alt="Thumbnail 2019 04 05 docker volumes mistake" /&gt;&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This week when doing a production deploy to &lt;a href="https://www.ustreasuryyieldcurve.com/"&gt;ustreasuryyieldcurve.com&lt;/a&gt;, I had an accident where I almost lost all the
latest snapshot of production data!&lt;/p&gt;

&lt;p&gt;Docker volumes is a feature that is handy for making your container&amp;#39;s application-specific data persistent across
deploys. When containers get rebuilt, redeployed, and restarted, all of the information in the container gets
scrapped. However, some data like your database of users and information you would want to keep outside of the
container and reused. That&amp;#39;s where Docker volumes comes in. You can specify a folder inside of your Docker container
to symlink to a folder outside of Docker on the host machine. The data will not only be persistent, but
can easily be backed up.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: &amp;#39;3&amp;#39;
services:
  database:
    container_name: ycurve_database
    image: &amp;quot;postgres:9.6.5-alpine&amp;quot;
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      DB_DATA_DIR: ${DB_DATA_DIR}
    networks:
      - ycurve
    volumes:
      - &amp;quot;./data/postgresql965/:/var/lib/postgresql/data/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;A Postgres database container with external volume specified as a directory on the local system&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Docker volumes also has a feature where you can specify a volume name rather than a folder path on the host machine.
Docker will use the name as a tag to manage the data location for you. You can find the exact location where
Docker is storing the data using the &lt;code&gt;docker inspect&lt;/code&gt; command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: &amp;#39;3&amp;#39;
services:
  database:
    container_name: ycurve_database
    image: &amp;quot;postgres:9.6.5-alpine&amp;quot;
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      DB_DATA_DIR: ${DB_DATA_DIR}
    networks:
      - ycurve
    volumes:
      - &amp;quot;ycurve_database_postgres965:/var/lib/postgresql/data/&amp;quot;

volumes:
  ycurve_database_postgres965:
    # This prevents the volume name from being prepended by the Capistrano release number. Without it
    # data would be stored in /var/lib/docker/volumes/&amp;lt;release_number&amp;gt;_ycurve_database_postgres965, so
    # then the next data deploy will get lost.
    external: true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;A Postgres database container with external volume specified by the Docker named volume. Note the need for a &lt;code&gt;volumes&lt;/code&gt;
section below&lt;/strong&gt;&lt;/p&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/docker-inspect.png"&gt;&lt;img src="../../../images/2019/03/docker-inspect.png" alt="Docker inspect" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      `docker inspect` shows you where the volumes are stored on the file system`
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The problem I encountered was when I performed a deploy using a Ruby tool called Capistrano and restarted the website,
all of the data was suddenly missing. I logged into the database using the Rails console and it reported to be completely
empty. So the next step I took was to use the &lt;code&gt;docker inspect&lt;/code&gt; command to see where the database volume was being stored.
I noticed that in the Docker volumes directory, there were separate volume folders corresponding to each Capistrano release
I&amp;#39;ve recently performed, with the release number prepending the directory. I only wanted it to be using a single
directory with no prepending.&lt;/p&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/volume-folders-prepended-by-release.png"&gt;&lt;img src="../../../images/2019/03/volume-folders-prepended-by-release.png" alt="Volume folders prepended by release" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      The volume folders were being prepended with the release number, so each time I deploy it created a new database.
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;So after some further research, I learned that I had to make a modification to my docker-compose file by adding the
&lt;code&gt;external&lt;/code&gt; keyword to the volume declaration. I also had to go onto the server and manually create the volume
using the command &lt;code&gt;docker volume create ycurve_database&lt;/code&gt;. I then figured out which release folder contained the
previous deploy&amp;#39;s working data and copied the contents into the newly created external volume folder. The next deploy
containing the updated &lt;code&gt;docker-compose.yml&lt;/code&gt; brought the site was back to normal!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Make Your Blog Posts Shareable with OpenGraph Meta Tags</title>
    <link rel="alternate" href="http://blog.url.com/2019/03/21/make-blog-posts-shareable-with-opengraph-meta-tags.html"/>
    <id>http://blog.url.com/2019/03/21/make-blog-posts-shareable-with-opengraph-meta-tags.html</id>
    <published>2019-03-21T19:00:00-04:00</published>
    <updated>2019-03-21T23:35:55-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;This blog is written in a Ruby tool called &lt;a href="https://middlemanapp.com/"&gt;Middleman&lt;/a&gt;. I noticed that when trying to share
one of my posts on social media, it doesn&amp;#39;t format as nicely as sharing articles from other big media sites.&lt;/p&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/bad-social-media-share-link.png"&gt;&lt;img src="../../../images/2019/03/bad-social-media-share-link.png" alt="Bad social media share link" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      How one of my blog articles looked when I tried to share
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/msm-social-media-link-example.png"&gt;&lt;img src="../../../images/2019/03/msm-social-media-link-example.png" alt="Msm social media link example" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      What a nicely formatted blog post share looks like
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/corrected-social-media-link.png"&gt;&lt;img src="../../../images/2019/03/corrected-social-media-link.png" alt="Corrected social media link" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      What a nicely formatted blog post share looks like
    &lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;Facebook OpenGraph Tags&lt;/h2&gt;

&lt;p&gt;I found out that Facebook invented a meta tag standard called &lt;a href="https://developers.facebook.com/docs/sharing/webmasters/#user-agent"&gt;OpenGraph&lt;/a&gt; which allows you to specify how your blog
post will display when shared on Facebook. Many other social media sites like LinkedIn and Twitter read the same tags.&lt;/p&gt;

&lt;p&gt;I was able to fix my blog post display by adding the following meta tags to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of each web page.&lt;/p&gt;

&lt;pre&gt;&lt;code class="html"&gt;&amp;lt;head&amp;gt;
  &amp;lt;meta content=&amp;#39;http://www.winstonkotzan.com/2019/03/09/production-https-setup-for-ruby-on-rails-app-with-docker.html&amp;#39; property=&amp;#39;og:url&amp;#39;&amp;gt;
  &amp;lt;meta content=&amp;#39;article&amp;#39; property=&amp;#39;og:type&amp;#39;&amp;gt;
  &amp;lt;meta content=&amp;#39;Human Readable Title of the Blog Post&amp;#39; property=&amp;#39;og:title&amp;#39;&amp;gt;
  &amp;lt;meta content=&amp;quot;Short description of my blog post.&amp;quot; property=&amp;#39;og:description&amp;#39;&amp;gt;
  &amp;lt;meta content=&amp;#39;https://my-blog-url.com/link/to/image-to-display.png&amp;#39; property=&amp;#39;og:image&amp;#39;&amp;gt;
  &amp;lt;meta content=&amp;quot;Same as the og:description value above&amp;quot; name=&amp;#39;twitter:card&amp;#39;&amp;gt;
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Facebook also has a &lt;a href="https://developers.facebook.com/tools/debug/sharing/?q=http%3A%2F%2Fwinstonkotzan.com%2Fblog%2F2019%2F02%2F04%2Fthree-allergic-triggers-that-can-cause-eczema.html"&gt;debugger tool&lt;/a&gt;
that can help you validate your HTML meta tag markup.&lt;/p&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/corrected-social-media-link.png"&gt;&lt;img src="../../../images/2019/03/corrected-social-media-link.png" alt="Corrected social media link" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      Facebook debugger tool
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Additional Resources:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://developers.facebook.com/docs/sharing/webmasters/#user-agent"&gt;Facebook OpenGraph Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.facebook.com/tools/debug/sharing/?q=http%3A%2F%2Fwinstonkotzan.com%2Fblog%2F2019%2F02%2F04%2Fthree-allergic-triggers-that-can-cause-eczema.html"&gt;Facebook OpenGraph Debugger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.twitter.com/en/docs/tweets/optimize-with-cards/guides/getting-started.html"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>How to Set Up HTTPS for Free on a Dockerized Ruby on Rails Production Server</title>
    <link rel="alternate" href="http://blog.url.com/2019/03/09/production-https-setup-for-ruby-on-rails-app-with-docker.html"/>
    <id>http://blog.url.com/2019/03/09/production-https-setup-for-ruby-on-rails-app-with-docker.html</id>
    <published>2019-03-09T18:00:00-05:00</published>
    <updated>2019-03-18T00:49:08-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I recently launched a Ruby on Rails based application and wanted to add HTTPS to my domain. In this
post, I&amp;#39;m going to show you how to add HTTPS to your domain using a tool called Certbot.&lt;/p&gt;

&lt;h3&gt;Why do you need HTTPS?&lt;/h3&gt;

&lt;p&gt;HTTPS is an essential service for modern web applications. An HTTPS-enabled website will encrypt all of the data
sent between you and the website server. This protects your passwords and other sensitive information from
third parties on the Internet such as other users on your local Wifi network. HTTPS can also be used as a means
to help users identify that they are on a correct website and not a scam website doctored to look like an authentic
website. With the major web browsers like Chrome now labeling non-HTTPS enabled websites as insecure, HTTPS may soon
be a required feature for website delivery.&lt;/p&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/Screen-Shot-2019-02-23-at-10.45.25-PM.png"&gt;&lt;img src="../../../images/2019/03/Screen-Shot-2019-02-23-at-10.45.25-PM.png" alt="Screen shot 2019 02 23 at 10.45.25 pm" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      Example of how an HTTPS enabled site displays
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/Screen-Shot-2019-02-23-at-10.48.14-PM.png"&gt;&lt;img src="../../../images/2019/03/Screen-Shot-2019-02-23-at-10.48.14-PM.png" alt="Screen shot 2019 02 23 at 10.48.14 pm" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      Example of how a not-HTTPS enabled site is displayed (as insecure)
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;This particular HTTPS setup is making several assumptions on your general website setup. In this case I had the
following pieces of software already running and configured:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ubuntu Linux 18.04 (Bionic Beaver) - this won&amp;#39;t work for Heroku or Windows.&lt;/li&gt;
&lt;li&gt;Application running on Docker

&lt;ul&gt;
&lt;li&gt;Rails app already installed on the server via Capistrano and running via Docker&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;NGINX installed on the server (but you can also run it via a Docker container)&lt;/li&gt;
&lt;li&gt;Certbot installed&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;What is NGINX?&lt;/h3&gt;

&lt;p&gt;NGINX is a Node.js based web server. In the Javascript world it can be used similarly to WEBRICK, Puma, or Thin
of the Ruby world. You could whole Javacsript applications served by NGINX. It&amp;#39;s also known for it&amp;#39;s speed, which
has similar performance benchmarks to Apache HTTP Server.&lt;/p&gt;

&lt;p&gt;In this example NGINX serves three functions:
1) Integrate our HTTPS certificate into transport layer.
2) Redirect traffic seeking the HTTP port 80 to the HTTPS port 443 to force clients into using the more secure protocol.
3) Route web traffic to the appropriate container for the domain name of the request. This will allow us to serve
   multiple websites using the same Linux server.&lt;/p&gt;

&lt;p&gt;This kind of setup for routing web traffic is called a reverse-proxy.&lt;/p&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/03/Screen-Shot-2019-02-24-at-2.12.21-PM.png"&gt;&lt;img src="../../../images/2019/03/Screen-Shot-2019-02-24-at-2.12.21-PM.png" alt="Screen shot 2019 02 24 at 2.12.21 pm" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      How the NGINX reverse proxy routes traffic to the appropriate application port based on the domain
    &lt;/div&gt;
&lt;/div&gt;

&lt;h4&gt;How do you install NGINX?&lt;/h4&gt;

&lt;p&gt;Installation instructions are found on &lt;a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/install/"&gt;the official NGINX website&lt;/a&gt;.
For this example instance, I installed NGINX using the &lt;code&gt;apt-get&lt;/code&gt; repository:&lt;/p&gt;

&lt;pre&gt;&lt;code class="bash"&gt;$ sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once it&amp;#39;s installed, a useful command to run is the configuration test, which verifies the OK status of its configuration
settings.
&lt;code&gt;
$ sudo nginx -T
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;What is Let&amp;#39;s Encrypt and Certbot?&lt;/h3&gt;

&lt;p&gt;Let&amp;#39;s Encrypt is a nonprofit organization that promises to be the Internet&amp;#39;s free, automated, and open Certficate
Authority (CA). Several companies such as Symantec, DigiCert, GoDaddy are also CA&amp;#39;s and offer certificates for a fee.
For HTTPS to work, your server needs to install a certificate from one of these companies, which is nothing more
than a private encryption key associated with your domain. When a client connects to your website, your server will send
a message encrypted with that private key, which can be decoded by a public key on the client&amp;#39;s end. HTTPS enabled web
browsers like Firefox or Chrome come with these public keys preinstalled, per an arrangement with the CA companies.
If you want a more general overview of how HTTPS certificates work, here is a great &lt;a href="https://www.youtube.com/watch?v=iQsKdtjwtYI"&gt;YouTube video&lt;/a&gt;
explaining the process.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s Encrypt has made the installation and renewal of SSL Certificates easy with a tool called &lt;a href="https://github.com/certbot/certbot"&gt;Certbot&lt;/a&gt;.
Certbot validates your server to the Let&amp;#39;s Encrypt by having it perform what it calls an ACME &lt;a href="https://certbot.eff.org/docs/challenges.html?highlight=http"&gt;challenge&lt;/a&gt;.
An example would be when you run Certbot, it will make a temporary file available via HTTP which the Let&amp;#39;s Encrypt
organization can access. Let&amp;#39;s Encrypt will then check the DNS records to verify that the domain name you want to
certify points to the server you are running Certbot from. If the DNS matches, then Let&amp;#39;s Encrypt will send
a newly issued certificate to your Certbot.&lt;/p&gt;

&lt;h4&gt;Certbot Tnstallation&lt;/h4&gt;

&lt;p&gt;Installation instructions are available on the &lt;a href="https://certbot.eff.org/docs/install.html"&gt;Certbot user guides&lt;/a&gt;, but
here is a summary of the commands I used to install Certbot:&lt;/p&gt;

&lt;pre&gt;&lt;code class="bash"&gt;$ sudo apt-get update
$ sudo apt-get install software-properties-common
$ sudo add-apt-repository universe
$ sudo add-apt-repository ppa:certbot/certbot
$ sudo apt-get update
$ sudo apt-get install certbot python-certbot-nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that I also installed the &lt;code&gt;python-certbot-nginx&lt;/code&gt; module, which invokes our instance of NGINX in performing
the challenge.&lt;/p&gt;

&lt;h3&gt;Configure the DNS to Point to the Server&amp;#39;s IP Address&lt;/h3&gt;

&lt;p&gt;All you need is an A or CNAME record pointing your domain to the IP address of your Linux server.&lt;/p&gt;

&lt;h3&gt;Run the Certbot ACME Challenge to Verify the Domain&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo certbot --nginx -d my-example-domain.com -d www.my-example-domain.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Passing the &lt;code&gt;nginx&lt;/code&gt; flag tells Certbot to use NGINX to perform the ACME challenge. Certbot temporarily modifies the
NGINX settings so that the remote Let&amp;#39;s Encrypt system can find a file on your system to complete the challenge.
Once complete, it will automatically install the received SSL certificate, which will act as a private key during the HTTPS initiation.&lt;/p&gt;

&lt;h3&gt;Update the NGINX settings to forward HTTP to HTTPS&lt;/h3&gt;

&lt;p&gt;Certbot should update your NGINX settings automatically, but here&amp;#39;s now it will look after.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# /etc/nginx/sites-available/my-example-domain.com

server {
    root /var/www/my-example-domain.com/current/public; # Directly serves anything in the Rails public folder
    index index.html index.htm index.nginx-debian.html;
    server_name my-example-domain.com www.my-example-domain.com; # managed by Certbot

    location / {
        proxy_pass http://localhost:8030; # 8030 is the port the Docker container is running on
          proxy_set_header Host $host;
          #try_files $uri $uri/ =404;
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/my-example-domain.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/my-example-domain.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.my-example-domain.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = my-example-domain.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80 ;
    listen [::]:80 ;
    server_name my-example-domain.com www.my-example-domain.com;
    return 404; # managed by Certbot
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NGINX has two important folders for domain settings:
&lt;code&gt;/etc/nginx/sites-available&lt;/code&gt;
&lt;code&gt;/etc/nginx/sites-enabled&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;sites-available&lt;/code&gt; folder has the NGINX proxy settings for each individual website. The &lt;code&gt;sites-enabled&lt;/code&gt; should
contain symlinks to the files in the &lt;code&gt;sites-available&lt;/code&gt; folder. Create a symlink at the command line like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ln -s /etc/nginx/sites-enabled/my-example-domain.com /etc/nginx/sites-available/my-example-domain.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Additional Resources:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;https://blog.heckel.xyz/2013/07/01/how-to-use-mitmproxy-to-read-and-modify-https-traffic-of-your-phone/&lt;/li&gt;
&lt;li&gt;https://www.youtube.com/watch?v=iQsKdtjwtYI&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>How to connect a Docker application to a Postgres database on the host machine</title>
    <link rel="alternate" href="http://blog.url.com/2019/02/05/how-to-connect-docker-to-a-postgres-database-on-host-machine-localhost.html"/>
    <id>http://blog.url.com/2019/02/05/how-to-connect-docker-to-a-postgres-database-on-host-machine-localhost.html</id>
    <published>2019-02-05T01:00:00-05:00</published>
    <updated>2019-03-18T23:41:45-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Connecting a Docker application to non-Dockerized Postgres database from is a more complicated task
than you would think. While a Docker container can easily communicate with other containers running on the same machine,
it can&amp;#39;t easily find how to connect to the host machine running it. This is because of the way Docker handles 
networking, by isolating the containers on its own virtual network which doesn&amp;#39;t include the computer hosting Docker.&lt;/p&gt;

&lt;p&gt;A while back I published &lt;a href="2017-06-01-connecting-to-external-postgres-database-with-docker.html.markdown"&gt;How to connect to an external Postgres database from a Docker container&lt;/a&gt;,
which showed you how to tinker with the settings on your local machine or any other computer in your local network
so that your Dockerized app can connect to Postgres. I&amp;#39;ve recently discovered an alternative method which is even faster.
Here&amp;#39;s how I do it now: &lt;/p&gt;

&lt;pre&gt;&lt;code class="yaml"&gt;version: &amp;#39;3&amp;#39;

services:
  myapp:
    build: .
    command: &amp;quot;bundle exec rails s&amp;quot;
    environment:
      - DATABASE_URL=${DATABASE_URL} # Connection string to the database goes here
      - PGPASSWORD=${PGPASSWORD}
      - RAILS_ENV=${RAILS_ENV:-development}
      - RAILS_LOG_TO_STDOUT=true
    network_mode: host
    tty: true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice how in my &lt;code&gt;docker-compose&lt;/code&gt; the &lt;code&gt;network_mode&lt;/code&gt; is &amp;quot;host&amp;quot;. This value will cause the container to run from the
host&amp;#39;s network directly - no isolation of the container onto its own network. That means &lt;code&gt;localhost&lt;/code&gt; in the container
will point to the &lt;code&gt;localhost&lt;/code&gt; of your machine. You can then connect to Postgres in the command line from within
the container like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker-compose run myapp /bin/sh

/app # psql -U postgres -h localhost
psql (10.5, server 9.6.11)
Type &amp;quot;help&amp;quot; for help.

postgres=# 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that it&amp;#39;s necessary to specify the &lt;code&gt;-h localhost&lt;/code&gt; parameter. Also, if you make use of the &lt;code&gt;PGPASSWORD&lt;/code&gt; environment
variable you can have that set to the database password so that it won&amp;#39;t prompt you to type it in.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Three Allergic Triggers That Can Cause Eczema</title>
    <link rel="alternate" href="http://blog.url.com/2019/02/04/three-allergic-triggers-that-can-cause-eczema.html"/>
    <id>http://blog.url.com/2019/02/04/three-allergic-triggers-that-can-cause-eczema.html</id>
    <published>2019-02-04T18:00:00-05:00</published>
    <updated>2019-03-20T00:11:43-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Part 2: How Allergic Reactions and Eczema Are Related&lt;/h2&gt;

&lt;p&gt;As I discussed in &lt;a href="../03/i-conquered-eczema-after-30-years-of-itchy-skin-and-you-can-too.html"&gt;Part 1&lt;/a&gt; of this blog post series, there is an immune system and allergic reaction component to eczema.
As someone who has dealt with quite severe eczema my whole life, I can confirm that allergies have a lot to do
with it per my own experimentation with exposure and avoidance of certain triggers. In some respects, eczema sufferers
are just people who are hypersensitive to environmental allergens. Eliminate the allergens, and the problem goes away.&lt;/p&gt;

&lt;p&gt;The way your body produces inflammation is complex. I find that most educational resources that describe the process go
into a lot of detail on the specific chemical interactions, which makes it hard to understand. But I think a key
takeaway about inflammation in regard to allergy is that it can turn into a perpetual chain reaction like a nuclear
reactor or a flame burning through fuel. A few of your cells identify a foreign substance in your skin that shouldn&amp;#39;t
be there, so those cells respond by releasing antibodies and other chemicals to fight the invader. But these same
chemicals also trigger other cells to start doing the same and produce even more of these immune response proteins. Soon, the entire
area of skin is producing these chemicals and the inflammatory reaction spreads.&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/cdCh4_Ckor0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;In the case of an allergy, your body is reacting to a benign environmental substance like cat saliva proteins for example,
which it&amp;#39;s trying to purge like it would a virus or bacteria. Once this process gets going it could keep itself going
and you have a rash long after you&amp;#39;ve been exposed to the allergen. It is at this point that your doctor may say it&amp;#39;s
necessary to &amp;quot;calm it down&amp;quot; with the use of a topical drug. The video below describes how the drug Eucrisa is thought
to work. It interferes in this reaction, blocking some of the immune system signaling proteins, and thereby stopping
the chain reaction of inflammation. Basically most drugs used to treat inflammatory response work similarly by
interfering somewhere along the chain of chemical reactions.&lt;/p&gt;

&lt;p&gt;&lt;video src="videos/2019/PFEU7008000H_Eucrisa_DTC_MOA-5575791536001.mp4" style="width: 640px;" /&gt;&lt;/p&gt;

&lt;p&gt;Although drugs may be necessary sometimes to calm eczema down, I find that the best way of staying healthy is to avoid
allergy triggers altogether. Sometimes it is difficult to pin down your specific allergic triggers as every person&amp;#39;s
case is different. I hope this brief list gives you clues on where to begin experimenting to find your own triggers.&lt;/p&gt;

&lt;h4&gt;Shampoos, soaps, and other personal care products that contact your skin&lt;/h4&gt;

&lt;p&gt;In my early 20s around the time I met my future wife, I started getting a really bad series of eczema outbreaks all
along my arms. My left arm especially was covered in itchy red rashes. I went to multiple doctors, and got the usual
treatment of triamcinolone, which only worked briefly before the rashes ripped right back. They tried more powerful
creams like fluocinonide and the problem kept getting worse.&lt;/p&gt;

&lt;p&gt;It wasn&amp;#39;t until one dermatologist I visited noticed that the rash on my wrist seem to fall in a perfectly straight line.
She asked me what I do that I might be rubbing against something causing me an allergy. She told a story of another
patient with a similar case of hand eczema, and they figured out that that patient had an allergy to the chemicals in
money and it was the way she would hold dollar bills that caused the rashes on her hands.&lt;/p&gt;

&lt;p&gt;After much thinking, we suspected that the rash on my wrist might be from the way I would play with my wife&amp;#39;s
hair when we&amp;#39;re walking around the streets of Chicago on our dates. We scrutinized her shampoo. A patch test confirmed
that I was allergic to Pantene. My dermatologist said that shampoo allergies are actually a common thing people end up
getting treated for.&lt;/p&gt;

&lt;div class="image-box"&gt;
  &lt;div class="image-box-content"&gt;
    &lt;a href="../../../images/2019/right-hand-wrist-eczema.jpg"&gt;&lt;img src="../../../images/2019/right-hand-wrist-eczema.jpg" alt="Right hand wrist eczema" /&gt;&lt;/a&gt;
  &lt;/div&gt;
    &lt;div class="image-box-caption"&gt;
      Dermatitis rash on my wrist with a well defined line at the allergen point of contact
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Over the years we&amp;#39;ve experimented with several shampoos to see what I&amp;#39;m allergic to. I&amp;#39;ve switched to the Free and Clear
brand of shampoo, which is supposed to not contain a lot of the toxic ingredients of the big brand shampoos. The common
ingredient that I could find causing me trouble is &lt;strong&gt;cocamide DEA&lt;/strong&gt;, an agent used to help the shampoo produce those
frothy bubbles when you rub it in your hair. I&amp;#39;m not 100% certain if that&amp;#39;s the only problematic ingredient, but it does
seem to have a correlation.&lt;/p&gt;

&lt;h4&gt;Allergies to dogs and cats&lt;/h4&gt;

&lt;p&gt;I&amp;#39;ve known since I was a kid that cats in proximity cause me to have watery eyes and a stuffy nose. But it was only
in recent years that I learned they can cause me dermatitis outbreaks as well. On a prick test when I was 23, I was told
that I had an affirmative reaction to both dog and cat proteins. Several years later I decided to fight through
my allergy and tried petting a cat that approached me. After a few minutes, my arm broke out in hives and in the
following days I got a pretty nasty dermatitis rash. It didn&amp;#39;t kill me, but it didn&amp;#39;t make me stronger either.&lt;/p&gt;

&lt;p&gt;More sneaky is my allergy to dogs. I really like dogs, but unfortunately I can&amp;#39;t interact with them a whole lot without
getting a dermatitis rash. I say it&amp;#39;s sneaky because I&amp;#39;ve figured out that when I pet a dog, the rashes don&amp;#39;t manifest
until at least a day or two later. Wearing disposable plastic gloves seems to work in preventing the rashes if I want
to pet a dog.&lt;/p&gt;

&lt;h4&gt;Food allergies&lt;/h4&gt;

&lt;p&gt;A less examined link between chronic eczema and allergens is food allergy. Allergens you ingest could manifest as a skin
rash, making it very difficult to see the link. However, there&amp;#39;s a growing body of scientific evidence demonstrating this,
such as &lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2923958/"&gt;this case study by the NIH&lt;/a&gt; showing a link between
patients who suffered from dematitis rashes and the consumption of nickel in their diet. Nickel is often absorbed
through whole grain breads and oatmeal.&lt;/p&gt;

&lt;p&gt;In my case I discovered that I have an allergy to coconut. I really like the taste of coconut, so was shocked when I
figured this out, but it makes sense since it could be related to my allergic reaction to cocamide DEA in shampoos.
I first started suspecting this when I noticed that the sweat I&amp;#39;d get during workouts seemed to cause a lot of itching
and later dermatitis around my neck. It was hard to deal with because I didn&amp;#39;t know exactly what to do about it. It
steadily became more of a problem over a 2 year period.&lt;/p&gt;

&lt;p&gt;I started to wonder what if there&amp;#39;s something &lt;em&gt;in&lt;/em&gt; my sweat that was causing the problem, like a food I&amp;#39;ve been eating
that&amp;#39;s getting sweat out during the exercise. What have I been doing differently lately that it&amp;#39;s becoming more of a
problem than before? I started making pre-workout smoothies with coconut water and various fruits. So I tested this
out by eliminating all coconut from my diet, and this seems to have worked. If I eat anything coconut like coconut
milk or coconut water I start to have some eczema problems in the following days. This was a tricky one to figure out
because like the cat and dog allegy, there is a delayed reaction and the symptoms aren&amp;#39;t so severe right away that
it forces me to notice the link in an obvious way.&lt;/p&gt;
</content>
  </entry>
</feed>
